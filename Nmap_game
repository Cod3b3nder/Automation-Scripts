#!/usr/bin/env python3
"""
Network Scanner - A retro-style hacking game interface for scanning networks
"""
import socket
import subprocess
import sys
import ipaddress
from concurrent.futures import ThreadPoolExecutor
import time
import random
import os

# ANSI color codes for terminal output
class Colors:
    HEADER = '\033[95m'
    BLUE = '\033[94m'
    CYAN = '\033[96m'
    GREEN = '\033[92m'
    YELLOW = '\033[93m'
    RED = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'
    BLACK_BG = '\033[40m'
    GREEN_BG = '\033[42m'
    BLUE_BG = '\033[44m'

def clear_screen():
    """Clear the terminal screen"""
    os.system('cls' if sys.platform.lower() == 'windows' else 'clear')

def typewriter_effect(text, delay=0.03):
    """Print text with a typewriter effect"""
    for char in text:
        sys.stdout.write(char)
        sys.stdout.flush()
        time.sleep(delay)
    print()

def hacker_animation(duration=2):
    """Display a fake hacking animation"""
    start_time = time.time()
    while time.time() - start_time < duration:
        # Generate random hex-like data
        line = ""
        for _ in range(random.randint(50, 80)):
            if random.random() < 0.1:
                line += random.choice(["0x", "0b", "FF", "00", "ERROR", "ACCESS", "DENIED", "GRANTED"])
            else:
                line += random.choice("0123456789ABCDEF") + " "
        
        color = random.choice([Colors.GREEN, Colors.CYAN, Colors.RED])
        print(f"{color}{line}{Colors.ENDC}", end="\r")
        time.sleep(0.05)
    print(" " * 100, end="\r")  # Clear the line

def loading_bar(total, current, width=50):
    """Display a retro-style loading bar"""
    percent = current / total
    filled_width = int(width * percent)
    bar = f"{Colors.GREEN_BG}{' ' * filled_width}{Colors.BLACK_BG}{' ' * (width - filled_width)}{Colors.ENDC}"
    return f"[{bar}] {int(percent * 100)}%"

def is_host_up(ip):
    """Check if host is up using ping"""
    try:
        # Use pin